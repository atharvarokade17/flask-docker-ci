version: 2.1

commands:
  msft_teams:
    description: Send notification to Microsoft Teams channel via webhook
    parameters:
      status: { type: string }
      color: { type: string }
      title: { type: string }
      image-tag: { type: string, default: "latest" }
      condition: { type: string, default: "always" }
    steps:
      - run:
          name: Notify Microsoft Teams (<< parameters.status >>)
          when: << parameters.condition >>
          command: |
            curl -H 'Content-Type: application/json' -d "{
              \"@type\": \"MessageCard\",
              \"@context\": \"http://schema.org/extensions\",
              \"summary\": \"<< parameters.status >>\",
              \"themeColor\": \"<< parameters.color >>\",
              \"title\": \"<< parameters.title >>\",
              \"sections\": [
                {\"text\": \"**Project** ${CIRCLE_PROJECT_REPONAME}\"},
                {\"text\": \"**Branch** ${CIRCLE_BRANCH}\"},
                {\"text\": \"**Tag** << parameters.image-tag >>\"}
              ],
              \"potentialAction\": [{
                \"@type\": \"OpenUri\",
                \"name\": \"View Job in CircleCI\",
                \"targets\": [{ \"os\": \"default\", \"uri\": \"${CIRCLE_BUILD_URL}\" }]
              }]
            }" $MS_TEAMS_WEBHOOK
  notify_teams_status:
    parameters:
      title: { type: string, default: $CIRCLE_JOB }
      image-tag: { type: string, default: latest }
    steps:
      - msft_teams:
          status: Success
          color: 00FF00
          title: ✅ << parameters.title >> Succeeded
          condition: on_success
          image-tag: << parameters.image-tag >>
      - msft_teams:
          status: Failed
          color: FF0000
          title: ❌ << parameters.title >> Failed
          condition: on_fail
          image-tag: << parameters.image-tag >>

jobs:
  build_docker_image:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate with DockerHub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Build Docker image
          command: |
            IMAGE_TAG=$(date +'%Y%m%d')
            echo "export IMAGE_TAG=$IMAGE_TAG" >> $BASH_ENV
            docker build --platform linux/amd64 -t $IMAGE_NAME:$IMAGE_TAG .
      - run:
          name: Push Docker image
          command: |
            source $BASH_ENV
            docker push $IMAGE_NAME:$IMAGE_TAG
      - notify_teams_status:
          title: "Build Docker Image"
          image-tag: "${IMAGE_TAG}"

workflows:
  version: 2
  docker_build:
    jobs:
      - build_docker_image
      