version: 2.1

orbs:
  azure-cli: circleci/azure-cli@1.3.2
  azure-acr: circleci/azure-acr@0.2.3

commands:
  msft_teams:
    description: Send notification to Microsoft Teams channel via webhook
    parameters:
      status: { type: string }
      color: { type: string }
      title: { type: string }
      image-tag: { type: string, default: "latest" }
      condition: { type: string, default: "always" }
    steps:
      - run:
          name: Notify Microsoft Teams (<< parameters.status >>)
          when: << parameters.condition >>
          command: |
            curl -H 'Content-Type: application/json' -d "{
              \"@type\": \"MessageCard\",
              \"@context\": \"http://schema.org/extensions\",
              \"summary\": \"<< parameters.status >>\",
              \"themeColor\": \"<< parameters.color >>\",
              \"title\": \"<< parameters.title >>\",
              \"sections\": [
                {\"text\": \"**Project** ${CIRCLE_PROJECT_REPONAME}\"},
                {\"text\": \"**Branch** ${CIRCLE_BRANCH}\"},
                {\"text\": \"**Tag** << parameters.image-tag >>\"}
              ],
              \"potentialAction\": [{
                \"@type\": \"OpenUri\",
                \"name\": \"View Job in CircleCI\",
                \"targets\": [{ \"os\": \"default\", \"uri\": \"${CIRCLE_BUILD_URL}\" }]
              }]
            }" $MS_TEAMS_WEBHOOK
  notify_teams_status:
    parameters:
      title: { type: string, default: $CIRCLE_JOB }
      image-tag: { type: string, default: latest }
    steps:
      - msft_teams:
          status: Success
          color: 00FF00
          title: ✅ << parameters.title >> Succeeded
          condition: on_success
          image-tag: << parameters.image-tag >>
      - msft_teams:
          status: Failed
          color: FF0000
          title: ❌ << parameters.title >> Failed
          condition: on_fail
          image-tag: << parameters.image-tag >>

jobs:
  build-push-to-acr:
    parameters:
      acr-repository: {type: string}
    docker:
      - image: cimg/base:2024.02
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - $GITHUB_SSH_FINGERPRINT
      - azure-cli/install
      - azure-cli/login-with-service-principal
      - run:
          name: Set tag
          command: |
            DEPLOYMENT_TAG=$(date +'%y%m%d')
            echo "DEPLOYMENT_TAG=$DEPLOYMENT_TAG" | tee -a ci.env >> $BASH_ENV
      - azure-acr/build-and-push-image:
          login-server-name: $DOCKER_ACR_REGISTRY    
          registry-name: $DOCKER_ACR_NAME            
          repo: << parameters.acr-repository >>
          dockerfile: Dockerfile
          extra-build-args: "--platform linux/amd64 --ssh default"
          tag: $DEPLOYMENT_TAG
      - persist_to_workspace:
          root: .
          paths:
            - ci.env
      - notify_teams_status:
          title: "Build and Push Docker Image to AZURE ACR"
          image-tag: $DEPLOYMENT_TAG, latest           

workflows:
  internal-workflows:
    jobs:
      - build-push-to-acr:
          acr-repository: sample-repo
          context: 
            - AZURE_CREDS